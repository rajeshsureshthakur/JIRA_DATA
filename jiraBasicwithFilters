import javax.swing.*;
import javax.swing.table.*;
import java.awt.*;
import java.awt.event.*;
import java.sql.*;
import java.util.*;
import java.util.List;

public class JiraDataViewer extends JFrame {
    private JTable table;
    private DefaultTableModel model;
    private JComboBox<String> statusFilter;
    private JComboBox<String> artFilter;

    public JiraDataViewer() {
        setTitle("Jira Data Viewer");
        setSize(1000, 600);  // Increased width
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setLocationRelativeTo(null);
        setLayout(new BorderLayout());

        model = new DefaultTableModel();
        table = new JTable(model);
        JScrollPane scrollPane = new JScrollPane(table);
        add(scrollPane, BorderLayout.CENTER);

        model.setColumnIdentifiers(new String[]{"Key", "Summary", "Status", "ART", "Time_Spent", "Epic"});

        JPanel filterPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));
        statusFilter = new JComboBox<>();
        artFilter = new JComboBox<>();
        filterPanel.add(new JLabel("Filter by Status:"));
        filterPanel.add(statusFilter);
        filterPanel.add(new JLabel("Filter by ART:"));
        filterPanel.add(artFilter);
        add(filterPanel, BorderLayout.NORTH);

        fetchData();
        configureFilters();
        adjustColumnWidths();
    }

    private void fetchData() {
        try {
            Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "your_user", "your_password");
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT Key, Summary, Status, ART, Time_Spent, Epic FROM jiradata");

            while (rs.next()) {
                model.addRow(new Object[]{
                        rs.getString("Key"),
                        rs.getString("Summary"),
                        rs.getString("Status"),
                        rs.getString("ART"),
                        rs.getInt("Time_Spent"),
                        rs.getString("Epic")
                });
            }

            rs.close();
            stmt.close();
            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error fetching data: " + e.getMessage());
        }
    }

    private void configureFilters() {
        Set<String> statusSet = new TreeSet<>();
        Set<String> artSet = new TreeSet<>();

        for (int i = 0; i < model.getRowCount(); i++) {
            statusSet.add((String) model.getValueAt(i, 2)); // Status column
            artSet.add((String) model.getValueAt(i, 3));    // ART column
        }

        statusFilter.addItem("All");
        for (String status : statusSet) {
            statusFilter.addItem(status);
        }

        artFilter.addItem("All");
        for (String art : artSet) {
            artFilter.addItem(art);
        }

        ActionListener filterAction = e -> applyFilters();
        statusFilter.addActionListener(filterAction);
        artFilter.addActionListener(filterAction);
    }

    private void applyFilters() {
        String selectedStatus = (String) statusFilter.getSelectedItem();
        String selectedArt = (String) artFilter.getSelectedItem();

        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        List<RowFilter<Object, Object>> filters = new ArrayList<>();

        if (!"All".equals(selectedStatus)) {
            filters.add(RowFilter.regexFilter("^" + selectedStatus + "$", 2)); // Status column
        }
        if (!"All".equals(selectedArt)) {
            filters.add(RowFilter.regexFilter("^" + selectedArt + "$", 3));    // ART column
        }

        if (filters.isEmpty()) {
            sorter.setRowFilter(null);
        } else {
            sorter.setRowFilter(RowFilter.andFilter(filters));
        }
        table.setRowSorter(sorter);
    }

    private void adjustColumnWidths() {
        TableColumnModel columnModel = table.getColumnModel();
        columnModel.getColumn(1).setPreferredWidth(400); // Summary column wider
    }
}
