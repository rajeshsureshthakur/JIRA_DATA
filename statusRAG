import javax.swing.*;
import javax.swing.table.*;
import java.awt.*;
import java.sql.*;
import java.time.LocalDate;
import java.time.temporal.ChronoUnit;

public class StatusHistoryViewer extends JFrame {
    private JTable table;
    private DefaultTableModel model;
    private JComboBox<String> ragFilter;

    public StatusHistoryViewer() {
        setTitle("Status History Viewer");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setSize(800, 400);
        setLayout(new BorderLayout());

        // Top Panel for Filter
        JPanel filterPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));
        ragFilter = new JComboBox<>(new String[]{"All", "Green", "Amber", "Red"});
        ragFilter.addActionListener(e -> applyFilter());
        filterPanel.add(new JLabel("Filter by RAG:"));
        filterPanel.add(ragFilter);
        add(filterPanel, BorderLayout.NORTH);

        // Table setup
        model = new DefaultTableModel(new String[]{"Key", "Start Date", "End Date", "Working Days", "RAG Status"}, 0);
        table = new JTable(model) {
            public Component prepareRenderer(TableCellRenderer renderer, int row, int column) {
                Component c = super.prepareRenderer(renderer, row, column);
                if (column == 4) { // RAG Status
                    String value = getValueAt(row, column).toString();
                    if (value.equalsIgnoreCase("Green")) {
                        c.setBackground(new Color(198, 239, 206));
                        c.setForeground(new Color(0, 97, 0));
                    } else if (value.equalsIgnoreCase("Amber")) {
                        c.setBackground(new Color(255, 235, 156));
                        c.setForeground(new Color(156, 101, 0));
                    } else if (value.equalsIgnoreCase("Red")) {
                        c.setBackground(new Color(255, 199, 206));
                        c.setForeground(new Color(156, 0, 6));
                    } else {
                        c.setBackground(Color.WHITE);
                        c.setForeground(Color.BLACK);
                    }
                } else {
                    c.setBackground(Color.WHITE);
                    c.setForeground(Color.BLACK);
                }
                return c;
            }
        };
        JScrollPane scrollPane = new JScrollPane(table);
        add(scrollPane, BorderLayout.CENTER);

        fetchDataFromDatabase();
        setVisible(true);
    }

    private void fetchDataFromDatabase() {
        model.setRowCount(0); // Clear existing
        String url = "jdbc:your_db_url";
        String username = "your_username";
        String password = "your_password";

        String query = "SELECT key, start_date, end_date FROM statushistory";

        try (Connection conn = DriverManager.getConnection(url, username, password);
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(query)) {

            while (rs.next()) {
                String key = rs.getString("key");
                LocalDate start = rs.getDate("start_date").toLocalDate();
                LocalDate end = rs.getDate("end_date").toLocalDate();
                long days = ChronoUnit.DAYS.between(start, end);
                String rag = days < 4 ? "Green" : days <= 6 ? "Amber" : "Red";
                model.addRow(new Object[]{key, start.toString(), end.toString(), days, rag});
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private void applyFilter() {
        String selectedRag = ragFilter.getSelectedItem().toString();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        table.setRowSorter(sorter);

        if (selectedRag.equals("All")) {
            sorter.setRowFilter(null);
        } else {
            sorter.setRowFilter(RowFilter.regexFilter(selectedRag, 4));
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(StatusHistoryViewer::new);
    }
}
