import javax.swing.*;
import javax.swing.table.*;
import java.awt.*;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Vector;

public class ImportHistoryScreen extends JFrame {

    public ImportHistoryScreen(String userId, Connection conn) {
        setTitle("Import History");
        setSize(900, 400);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        // Updated columns
        String[] columnNames = {"Job Name", "Job ID", "Job Date", "Job Status", "Submitted By"};
        DefaultTableModel model = new DefaultTableModel(columnNames, 0);
        JTable table = new JTable(model);

        // Center cell content
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);
        for (int i = 0; i < table.getColumnCount(); i++) {
            table.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
        }

        // Custom renderer for status highlighting (only for Job Status column)
        table.getColumnModel().getColumn(3).setCellRenderer(new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value,
                    boolean isSelected, boolean hasFocus, int row, int column) {

                Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                String status = value.toString();

                switch (status) {
                    case "Failed":
                        c.setBackground(new Color(255, 204, 204));
                        c.setForeground(new Color(153, 0, 0));
                        break;
                    case "Success":
                        c.setBackground(new Color(204, 255, 204));
                        c.setForeground(new Color(0, 102, 0));
                        break;
                    case "Queued":
                        c.setBackground(Color.LIGHT_GRAY);
                        c.setForeground(Color.DARK_GRAY);
                        break;
                    case "In Progress":
                        c.setBackground(new Color(255, 229, 180));
                        c.setForeground(new Color(153, 102, 0));
                        break;
                    default:
                        c.setBackground(Color.WHITE);
                        c.setForeground(Color.BLACK);
                }

                ((JLabel) c).setHorizontalAlignment(SwingConstants.CENTER);
                return c;
            }
        });

        // Load data from DB
        try (PreparedStatement ps = conn.prepareStatement(
                "SELECT job_name, job_id, job_date, job_status, user_name " +
                "FROM importhistory WHERE user_id = ?")) {

            ps.setString(1, userId);
            ResultSet rs = ps.executeQuery();

            SimpleDateFormat sdf = new SimpleDateFormat("dd-MMM-yyyy HH:mm:ss");

            while (rs.next()) {
                Vector<Object> row = new Vector<>();
                row.add(rs.getString("job_name"));
                row.add(rs.getInt("job_id"));
                Timestamp ts = rs.getTimestamp("job_date");
                row.add(ts != null ? sdf.format(ts) : "N/A");
                row.add(rs.getString("job_status"));
                row.add(rs.getString("user_name"));
                model.addRow(row);
            }

        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error loading import history.", "Error", JOptionPane.ERROR_MESSAGE);
        }

        add(new JScrollPane(table));
        setVisible(true);
    }
}
